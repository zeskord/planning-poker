{"version":3,"sources":["components/User.js","components/UserList.js","components/Spectator.js","components/SpectatorList.js","components/NavigationBar.js","components/PokerCard.js","components/PokerCardSpecial.js","components/PokerCards.js","components/PlanningPage.js","components/LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["User","props","badge","undefined","isSpecialMark","mark","markVisible","itsMe","src","style","width","height","alt","className","liClass","userName","id","UserList","users","map","user","name","marksVisible","currentUserName","Spectator","SpectatorList","class","fontSize","spectators","NavigationBar","event","a","fetch","method","userData","isAuthenticated","setAuthState","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onClick","PokerCard","modalOnSelect","title","PokerCardSpecial","img","PokerCards","variant","PlanningPage","intervalID","useRef","useState","userState","setUserState","setMark","markClient","setMarkClient","show","setShow","setMarksVisible","userIDs","spectatorIDs","state","setState","list","setSpectators","headers","Accept","response","json","isSpectator","prev","tick","current","setInterval","console","error","responseData","sendMark","reqBody","body","JSON","stringify","text","keyCode","selectedValue","mark_temp","useEffect","getUserData","clearInterval","myUserDataOnServer","find","us","bg","onChange","target","value","onKeyUp","length","tabIndex","aria-labelledby","data-bs-backdrop","data-bs-keyboard","aria-hidden","data-bs-dismiss","LoginForm","loginclick","result","userDataFromServer","placeholder","aria-describedby","htmlFor","App","Cookies","get","AuthState","minWidth","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.625c7486.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const User = (props) => {\r\n  var badge = undefined;\r\n  var isSpecialMark = (props.mark === \"coffee\") || (props.mark === \"infinity\");\r\n\r\n  if (!props.markVisible & props.itsMe & (props.mark !== undefined)) {\r\n    if (isSpecialMark) {\r\n      badge = (\r\n        <img\r\n          src={props.mark + \"-light.svg\"}\r\n          style={{ width: \"1.5rem\", height: \"100%\" }}\r\n          alt={props.mark}\r\n        />\r\n      );\r\n    } else {\r\n      badge = (\r\n        <span className=\"badge rounded-pill bg-secondary mt-1\">\r\n          {props.mark}\r\n        </span>\r\n      );\r\n    }\r\n  } else if (props.markVisible) {\r\n    if (isSpecialMark) {\r\n      badge = (\r\n        <img\r\n          src={props.mark + \"-dark.svg\"}\r\n          style={{ width: \"1.5rem\", height: \"100%\" }}\r\n          alt={props.mark}\r\n        />\r\n      );\r\n    } else {\r\n      badge = (\r\n        <span className=\"badge rounded-pill bg-primary mt-1\">{props.mark}</span>\r\n      );\r\n    }\r\n  }\r\n  var liClass =\r\n    \"list-group-item justify-content-between align-items-center\" +\r\n    (props.mark !== undefined ? \" list-group-item-success\" : \"\");\r\n\r\n  return (\r\n    <li className={liClass} key={props.id}>\r\n      <div className=\"d-flex justify-content-between my-1\">\r\n        {props.userName}\r\n        {badge !== undefined && badge}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","// Представляет список активных пользователей.\r\nimport React from \"react\";\r\nimport { User } from \"./User\";\r\n\r\nexport const UserList = (props) => {\r\n  return (\r\n    <ul className=\"list-group my-2\">\r\n      {props.users.map((user) => (\r\n        <User\r\n          key={user.id}\r\n          id={user.id}\r\n          userName={user.name}\r\n          mark={user.mark}\r\n          markVisible={props.marksVisible}\r\n          itsMe={props.currentUserName === user.name}\r\n        ></User>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Spectator = (props) => {\r\n\r\n  return (\r\n    <li className=\"list-group-item justify-content-between align-items-center py-1\" key={props.id}>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {props.userName}\r\n        </div>\r\n    </li>\r\n  )\r\n}","// Представляет список активных пользователей.\r\nimport React from \"react\";\r\nimport { Spectator } from \"./Spectator\";\r\n\r\nexport const SpectatorList = (props) => {\r\n  return (\r\n    <ul class=\"list-group\" style={{fontSize: '.8rem'}}>\r\n      {props.spectators.map((user) => (\r\n        <Spectator\r\n          key={user.id}\r\n          id={user.id}\r\n          userName={user.name}\r\n        //   itsMe={props.currentUserName === user.name}\r\n        ></Spectator>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const NavigationBar = (props) => {\r\n  async function logoutClick(event) {\r\n    const url = \"/logOut\";\r\n    await fetch(url, { method: \"POST\" });\r\n    // Процедура, переданная из самого корня.\r\n    const userData = {\r\n      userName: undefined,\r\n      isAuthenticated: false,\r\n    };\r\n    props.setAuthState(userData);\r\n  }\r\n\r\n  async function fullReset(event) {\r\n    const url = \"/fullReset\";\r\n    await fetch(url, { method: \"POST\" });\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.userName}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <div className=\"navbar-nav\">\r\n            <a className=\"nav-link\" href=\"#\" onClick={logoutClick}>\r\n              Разлогиниться\r\n            </a>\r\n            <a className=\"nav-link\" href=\"#\" onClick={fullReset}>\r\n              Полный сброс\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const PokerCard = (props) => {\r\n  async function onClick() {\r\n    await props.modalOnSelect(props.title);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"card my-2 text-center\"\r\n      style={{ width: \"18rem\" }}\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"card-body\">\r\n        <h5\r\n          className=\"card-title align-middle\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#myModal\"\r\n          style={{ fontSize: \"2rem\" }}\r\n        >\r\n          {props.title}\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const PokerCardSpecial = (props) => {\r\n  async function onClick() {\r\n    await props.modalOnSelect(props.title);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"card my-2 text-center\"\r\n      style={{ width: \"18rem\", height: \"100%\" }}\r\n      onClick={onClick}\r\n    >\r\n      <img\r\n        src={props.img}\r\n        className=\"card-img my-2\"\r\n        style={{ width: \"18rem\", height: \"4rem\" }}\r\n        alt=\"...\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#myModal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { PokerCard } from \"./PokerCard\";\r\nimport { PokerCardSpecial } from \"./PokerCardSpecial\";\r\n\r\nexport const PokerCards = (props) => {\r\n  var marks = [\r\n    \"0\",\r\n    \"0.5\",\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"5\",\r\n    \"8\",\r\n    \"13\",\r\n    \"21\",\r\n    \"34\",\r\n    \"55\",\r\n    \"89\",\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <PokerCardSpecial\r\n        variant=\"primary\"\r\n        key=\"coffee\"\r\n        title=\"coffee\"\r\n        img=\"coffee-dark.svg\"\r\n        modalOnSelect={props.modalOnSelect}\r\n      />\r\n      {marks.map((mark) => (\r\n        <PokerCard\r\n          variant=\"primary\"\r\n          key={mark}\r\n          title={mark}\r\n          modalOnSelect={props.modalOnSelect}\r\n        />\r\n      ))}\r\n      <PokerCardSpecial\r\n        variant=\"primary\"\r\n        key=\"infinity\"\r\n        title=\"infinity\"\r\n        img=\"infinity-dark.svg\"\r\n        modalOnSelect={props.modalOnSelect}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { UserList } from \"./UserList\";\r\nimport { SpectatorList } from \"./SpectatorList\";\r\nimport { NavigationBar } from \"./NavigationBar\";\r\nimport { PokerCards } from \"./PokerCards\";\r\nimport {Modal} from \"bootstrap\"\r\n\r\nexport const PlanningPage = (props) => {\r\n  const intervalID = useRef(undefined);\r\n\r\n  // Стейт текущего пользователя.\r\n  const [userState, setUserState] = useState({\r\n    user: {}, // name, isSpectator\r\n  });\r\n\r\n  // Оценка, которая была отправлена на сервер. При изменении обязательно должна\r\n  // отправиться на сервер.\r\n  const [mark, setMark] = useState(undefined);\r\n\r\n  // Оценка, которая изменяется в поле ввода, но не обязательно отправлялась на сервер.\r\n  const [markClient, setMarkClient] = useState(undefined);\r\n\r\n  // Показывается ли в текущий момент модальное окно выбора оценки.\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [marksVisible, setMarksVisible] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    users: [], // Пользователи со всеми данными.\r\n    spectators: [], // Зрители со всеми данными.\r\n    userIDs: [], // Просто массив идентификаторов пользователей\r\n    spectatorIDs: [], // Просто массив идентификаторов зрителей\r\n    marksVisible: false, // Оценки вскрыты?\r\n  });\r\n\r\n  const [spectators, setSpectators] = useState({ list: [] });\r\n\r\n  useEffect(() => {\r\n    // Запрашиваем с сервера, как он видит текущего пользователя.\r\n    // Устанавливаем обработчик ожидания tick.\r\n    getUserData();\r\n    return () => {\r\n      clearInterval(intervalID.current);\r\n    };\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    // undefined - это когда происходит очистка оценок.\r\n    if (mark !== undefined) {\r\n      sendMark();\r\n    }\r\n  }, [mark]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect markClient\")\r\n  }, [markClient]);\r\n\r\n  // Возникает, когда на сервере меняется таблица пользователей.\r\n  useEffect(() => {\r\n    // console.log(\"useEffect state \", state)\r\n\r\n    var myUserDataOnServer = state.users.find(\r\n      (us) => us.name === userState.user.name\r\n    );\r\n    if (\r\n      myUserDataOnServer !== undefined &&\r\n      myUserDataOnServer.mark === undefined &&\r\n      mark !== undefined\r\n    ) {\r\n      setMark(undefined);\r\n    }\r\n\r\n    // if (marksVisible === false) {\r\n    //   setMark(undefined)\r\n    // }\r\n  }, [state]);\r\n\r\n  async function getUserData() {\r\n    try {\r\n      const url = \"/getUserData\";\r\n      const response = await fetch(url, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      const user = {\r\n        name: json.user,\r\n        isSpectator: json.isSpectator,\r\n      };\r\n      setUserState((prev) => {\r\n        return {\r\n          ...prev,\r\n          user: user,\r\n        };\r\n      });\r\n      await tick();\r\n      intervalID.current = setInterval(tick, 2000);\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n    }\r\n  }\r\n\r\n  // Глобальный клиентский тик.\r\n  async function tick() {\r\n    try {\r\n      const url = \"/tick\";\r\n      const response = await fetch(url);\r\n      const responseData = await response.json();\r\n      setState((prev) => {\r\n        return {\r\n          ...prev,\r\n          users: responseData.users,\r\n        };\r\n      });\r\n      setSpectators((prev) => {\r\n        return {\r\n          ...prev,\r\n          list: responseData.spectators,\r\n        };\r\n      });\r\n      setMarksVisible(responseData.marksVisible);\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n    }\r\n  }\r\n\r\n  function markChange(event) {\r\n    var mark_temp = event.target.value;\r\n    setMarkClient(mark_temp);\r\n  }\r\n\r\n  async function sendMark() {\r\n    try {\r\n      // console.log(\"sendMark()\")\r\n      const url = \"/sendMark\";\r\n      const reqBody = {\r\n        user: userState.user.name,\r\n        mark: markClient, // на сервер отправляем клиентскую оценку.\r\n      };\r\n      // console.log(reqBody)\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify(reqBody),\r\n      });\r\n      await response.text();\r\n      await tick();\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n    }\r\n  }\r\n\r\n  async function markKeyUp(event) {\r\n    if (event.keyCode === 13) {\r\n      sendMark();\r\n    }\r\n  }\r\n\r\n  async function openClick(event) {\r\n    try {\r\n      const url = \"/showMarks\";\r\n      await fetch(url, { method: \"POST\" });\r\n      tick();\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n    }\r\n  }\r\n\r\n  async function clearMarksClick(event) {\r\n    try {\r\n      const url = \"/clearMarks\";\r\n      await fetch(url, { method: \"POST\" });\r\n      tick();\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n    }\r\n  }\r\n\r\n  async function markSelect(event) {\r\n    try {\r\n      setShow(true);\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n    }\r\n  }\r\n\r\n  async function modalOnSelect(selectedValue) {\r\n    setShow(false);\r\n    var mark_temp = selectedValue;\r\n    setMarkClient(mark_temp);\r\n    setMark(mark_temp); // Сразу будет отправлено.\r\n  }\r\n\r\n  async function changeMark() {\r\n    await setMark(markClient);\r\n  }\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <div bg=\"light\">\r\n      <NavigationBar\r\n        userName={userState.user.name}\r\n        setAuthState={props.setAuthState}\r\n      />\r\n      <div className=\"container-sm\">\r\n        <div className=\"input-group input-group-lg my-2\">\r\n          <span className=\"input-group-text\">Оценка</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            onChange={markChange}\r\n            onKeyUp={markKeyUp}\r\n            value={markClient || \"\"}\r\n          ></input>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#myModal\"\r\n            // id=\"button-addon2\"\r\n            onClick={markSelect}\r\n          >\r\n            . . .\r\n          </button>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-lg my-2\"\r\n          onClick={changeMark}\r\n        >\r\n          Отправить\r\n        </button>\r\n        <UserList\r\n          users={state.users}\r\n          marksVisible={marksVisible}\r\n          currentUserName={userState.user.name}\r\n        />\r\n        <img\r\n          className=\"my-2\"\r\n          src={marksVisible ? \"eye.svg\" : \"eye-slash.svg\"}\r\n          // width=\"24\"\r\n          // height=\"24\"\r\n        />\r\n        <div className=\"pt-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success btn-lg\"\r\n            onClick={openClick}\r\n          >\r\n            Вскрываемся\r\n          </button>\r\n        </div>\r\n        <div className=\"my-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning btn-lg my-2\"\r\n            onClick={clearMarksClick}\r\n          >\r\n            Очистить оценки\r\n          </button>\r\n        </div>\r\n        {spectators.list.length !== 0 && (\r\n          <div className=\"card my-4\">\r\n            <div className=\"card-header\">Зрители</div>\r\n            <div className=\"card-body\">\r\n              <SpectatorList\r\n                className=\"my-2 px-2\"\r\n                spectators={spectators.list}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div\r\n        className={\"modal fade\"}\r\n        id=\"myModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        aria-hidden={!show}\r\n        // aria-hidden=\"false\"\r\n        // onHide={handleClose}\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">Выбор оценки</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Закрыть\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <PokerCards modalOnSelect={modalOnSelect}/>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary btn-lg my-2\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={handleClose}\r\n              >\r\n                Закрыть\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nexport const LoginForm = (props) => {\r\n\r\n    var userName = \"\"\r\n    var isSpectator = false\r\n\r\n    const [state, setState] = useState({\r\n        userName: \"\",\r\n        isSpectator: false\r\n    });\r\n\r\n    async function loginclick() {\r\n        const reqBody = {\r\n            userName: state.userName,\r\n            isSpectator: state.isSpectator\r\n        }\r\n        const result = await fetch(\"/\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(reqBody)\r\n        })\r\n        const userDataFromServer = await result.json()\r\n        const userData = {\r\n            userName: userDataFromServer.name,\r\n            isAuthenticated: true\r\n        }\r\n        props.setAuthState(userData)\r\n    }\r\n\r\n    function loginKeyUp(event) {\r\n        if (event.keyCode === 13) {\r\n            loginclick()\r\n        }\r\n    }\r\n\r\n    function userNameChange(event) {\r\n\r\n        userName = event.target.value\r\n        setState(prev => {\r\n            return {\r\n                ...prev,\r\n                userName: userName\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    function isSpectatorChange(event) {\r\n\r\n        isSpectator = event.target.value\r\n        setState(prev => {\r\n            return {\r\n                ...prev,\r\n                isSpectator: isSpectator\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-sm\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            class=\"form-control form-control-lg\"\r\n            placeholder=\"Введите ваше имя\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n            type=\"text\"\r\n            id=\"userName\"\r\n            value={state.userName}\r\n            onChange={userNameChange}\r\n            onKeyUp={loginKeyUp}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\">\r\n          <div class=\"form-check\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"isSpectator\"\r\n              value={state.isSpectator}\r\n              onChange={isSpectatorChange}\r\n            />\r\n            <label class=\"form-check-label\" htmlFor=\"isSpectator\">\r\n              Я только посмотреть\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <button className=\"btn btn-primary\" onClick={loginclick}>\r\n            Войти\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n}","import React, { useState } from 'react'\r\nimport Cookies from 'universal-cookie'\r\nimport { PlanningPage } from './components/PlanningPage'\r\nimport { LoginForm } from './components/LoginForm'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import './darktheme.css';\r\n\r\nexport const App = (props) => {\r\n\r\n    const style = {\r\n        minWidth: '100vw',\r\n        minHeight: '100vh'\r\n    }\r\n\r\n    const cookies = new Cookies();\r\n    var user = cookies.get(\"user\")\r\n    const isAuthenticated = (user !== undefined)\r\n\r\n    const [AuthState, setAuthState] = useState({\r\n        isAuthenticated: isAuthenticated,\r\n        isSpectator: isAuthenticated ? user.isSpectator : undefined,\r\n        userName: isAuthenticated ? user.name : undefined\r\n    })\r\n\r\n    return (\r\n        <div className=\"bg-light\" style={style}>\r\n            {AuthState.isAuthenticated ? (\r\n                <PlanningPage setAuthState={setAuthState} />\r\n            )\r\n                :\r\n                (\r\n                    <LoginForm setAuthState={setAuthState} />\r\n                )}\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}